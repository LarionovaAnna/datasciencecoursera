data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
inTrain = createDataPartition(adData$diagnosis, p = 3/4)[[1]]
training = adData[ inTrain,]
testing = adData[-inTrain,]
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
# Set the seed to 233 and fit a lasso model to predict Compressive Strength.
# Which variable is the last coefficient to be set to zero as the penalty increases?
# (Hint: it may be useful to look up ?plot.enet).
library(caret)
set.seed(233)
fit <- train(CompressiveStrength ~ ., data = training, method = "lasso")
plot.enet(fit$finalModel, xvar = "penalty", use.color = TRUE)
library(lubridate)  # For year() function below
dat = read.csv(url("https://d396qusza40orc.cloudfront.net/predmachlearn/gaData.csv"))
training = dat[year(dat$date) < 2012,]
testing = dat[(year(dat$date)) > 2011,]
tstrain = ts(training$visitsTumblr)
library(lubridate)  # For year() function below
dat <- read.csv(url("https://d396qusza40orc.cloudfront.net/predmachlearn/gaData.csv"))
training <- dat[year(dat$date) < 2012,]
testing <- dat[(year(dat$date)) > 2011,]
tstrain <- ts(training$visitsTumblr)
getwd()
cd "C:/Documents and Settings/Администратор/Мои документы/Downloads"
library(lubridate)  # For year() function below
dat = read.csv("C:/Documents and Settings/Администратор/Мои документы/Downloads/gaData.csv")
training = dat[year(dat$date) < 2012,]
testing = dat[(year(dat$date)) > 2011,]
tstrain = ts(training$visitsTumblr)
library(lubridate)
install.packages("lubridate")
library(lubridate)
library(lubridate)  # For year() function below
dat = read.csv("C:/Documents and Settings/Администратор/Мои документы/Downloads/gaData.csv")
training = dat[year(dat$date) < 2012,]
testing = dat[(year(dat$date)) > 2011,]
tstrain = ts(training$visitsTumblr)
library(forecast)
library(quantmod)
install.packages("forecast","quantmod")
install.packages("forecast")
install.packages("quantmod")
library(forecast)
library(quantmod)
fit <- bats(tstrain)
h <- dim(testing)[1]
fcast <- forecast(fit, level = 95, h = h)
accuracy(fcast, testing$visitsTumblr)
result <- c()
l <- length(fcast$lower)
for (i in 1:l){
x <- testing$visitsTumblr[i]
a <- fcast$lower[i] < x & x < fcast$upper[i]
result <- c(result, a)
}
sum(result)/l * 100
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
library(e1071)
library(caret)
fit <- train(CompressiveStrength ~ ., data = training, method = "svmRadial")
install.packages("e1071",TRUE)
install.packages("e1071", TRUE)
install.packages("e1071")
install.packages("e1071",dependencies=TRUE)
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
# Set the seed to 325 and fit a support vector machine using the e1071 package
# to predict Compressive Strength using the default settings. Predict on the
# testing set. What is the RMSE?
set.seed(325)
library(e1071)
library(caret)
fit <- train(CompressiveStrength ~ ., data = training, method = "svmRadial")
prediction <- predict(fit, testing)
accuracy(prediction, testing$CompressiveStrength)
set.seed(3523)
> library(AppliedPredictiveModeling)
> data(concrete)
> inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
> training = concrete[ inTrain,]
> testing = concrete[-inTrain,]
> set.seed(325)
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
library(e1071)
library(caret)
fit <- train(CompressiveStrength ~ ., data = training, method = "svmRadial")
prediction <- predict(fit, testing)
accuracy(prediction, testing$CompressiveStrength)
install.packages("caret",dependencies=TRUE)
library(forecast)
accuracy(prediction, testing$CompressiveStrength)
x <- 1:4
y <-2:3
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
data<-read.csv("C:\\Documents and Settings\\Администратор\\Рабочий стол\\hw1_data.csv")
View(data)
names(data)
data[1:2,]
nrow(data)
tail(data,2)
data[47,]
data[47,"Ozone"]
is.na(data,"Ozone")
is.na("Ozone")
is.na(data)
is.na(data[,"Ozone"])
sum(is.na(data[,"Ozone"]))
backup<-data
is.na(backup[,"Ozone"])
$Ozone
backup$Ozone
mean(backup$Ozone, na.rm=TRUE)
subset<-data
sub = subset(data, !is.na(Ozone), select = Ozone)
apply(sub, 2, mean)
bad <- !is.na(Ozone)
bad <- is.na(data$Ozone)
data[!bad]
subset(na.rm=TRUE)
a<-data$Ozone>31
b<-data$Temp>90
sub<-subset(a&b)
subboolean <- data[data[, "Ozone"] > 31 & data[, "Temp"] > 90, ]
mean(subboolean$Solar.R, na.rm=TRUE)
sub = subset(data, Ozone > 31 & Temp > 90, select = Solar.R)
apply(sub,2,mean)
subs<-data[data[,"Temp"] & data[,"Month"]=6]
subs = subset(data, Month = 6, select = Temp)
apply(subs,2,mean)
subs = subset(data, Month == 6, select = Temp)
apply(subs,2,mean)
x<-data[data[,Month==6],]
x<-data[data[,"Month"==6],]
x <- data[data[, "Month"] == 6,]
mean(x$Temp)
y <- data[data[, "Month"] ==5,]
max(x$Ozone)
max(x$Ozone,na.rm=TRUE)
max(y$Ozone,na.rm=TRUE)
subss = subset(data, !is.na(Ozone) & Month == 5, select = Ozone)
apply(sub, 2, max)
apply(subss, 2, max)
w<-4
class(w)
x <- c(4, "a", TRUE)
class(x)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = 'C:\Documents and Settings\Администратор\Мои документы\Downloads')
download.file(fileUrl, destfile = 'C:\\Documents and Settings\\Администратор\\Мои документы\\Downloads')
getwd()
setwd('C://Documents and Settings//Администратор//datasciencecoursera//Getting And Cleaning Data')
download.file(fileUrl, destfile = 'C://Documents and Settings//Администратор//datasciencecoursera//Getting And Cleaning Data')
download.file(fileUrl, destfile = 'C:\\Documents and Settings\\Администратор\\datasciencecoursera\\Getting And Cleaning Data')
download.file(fileUrl, destfile = 'C://Documents and Settings//Администратор//datasciencecoursera//Getting And Cleaning Data//')
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FPUMSDataDict06.pdf"
f <- file.path(getwd(), "PUMSDataDict06.pdf")
download.file(url, f, mode = "wb")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
getwd()
setwd('C://Documents and Settings//Администратор//datasciencecoursera//Getting And Cleaning Data//Week 1//Quiz 1//')
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url=fileUrl,destfile="ss06hid.csv",mode="w")
download.file(url=fileUrl,destfile="ss06hid.csv",mode="w")
download.file(url=fileUrl,destfile="ss06hid.csv",mode="w")
download.file(url=fileUrl,destfile="ss06hid.csv")
data<-read.csv("C://Documents and Settings//Администратор//datasciencecoursera//Getting And Cleaning Data//Week 1//Quiz 1//getdata-data-ss06hid.csv")
head(data)
View(data)
View(data)
subs<-subset(data, !is.na(VAL) >= 1000000)
subs<-subset(data, VAL >= 1000000)
data[,VAL]
View(data)
data[[,VAL]]
data$VAL
max(data$VAL)
max(data$VAL,na.rm=TRUE)
subs<-subset(data, !is.na(VAL) == 24)
subs<-subset(data$VAL == 24)
subs<-data[data,[,"VAL"]==24]
subs<-data[data[,"VAL"]==24,]
sum(subs)
subs
nrows(subs)
subs<-is.na(subs)
subs
subs<-data[data[,"VAL"]==24,]
max(subs)
length(subs)
length(!is.na(subs)
)
length(subs&VAL, na.rm=TRUE)
subs
sum(!is.na(data$VAL[data$VAL==24]))
data$FES
data[,FES]
data[,"FES"]
!is.na(data$FES)
data[,"FES"]
fileUrl1<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(fileUrl, destfile = 'getgata-data-DATA.gov_NGAP.xlsx')
library(xlsx)
install.packages('xlsx')
library(xlsx)
colIndex<-7:15
rowIndex<-18:23
xldata<-<- read.xlsx(".DATA.gov_NGAP.xlsx", sheetIndex=1, header=TRUE, colIndex=colIndex, rowIndex=rowIndex)
xldata<-read.xlsx(".DATA.gov_NGAP.xlsx", sheetIndex=1, header=TRUE, colIndex=colIndex, rowIndex=rowIndex)
xldata<-read.xlsx("C:\\Documents and Settings\\Администратор\\datasciencecoursera\\Getting And Cleaning Data\\Week 1\\Quiz 1\\getdata-data-DATA.gov_NGAP.xlsx", sheetIndex=1, header=TRUE, colIndex=colIndex, rowIndex=rowIndex)
sum(xldata$Zip*dat$Ext,na.rm=T)
sum(xldata$Zip*xldata$Ext,na.rm=T)
library(xml)
install.packages('xml')
install.packages('XML')
library(XML)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl, useInternal=TRUE)
rootNode <- xmlRoot(doc)
sum(xpathSApply(rootNode, "//zipcode", xmlValue)==21231)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
DTURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
DT <- read.csv(url(DTURL), na.strings=c("NA","#DIV/0!",""))
setwd("C:\\Documents and Settings\\Администратор\\Мои документы\\Downloads")
DT <- read.csv("detdata-data-ss06pid.csv")
getwd
getwd()
DT <- read.csv("./detdata-data-ss06pid.csv")
DT <- read.csv("C:\\Documents and Settings\\Администратор\\Мои документы\\Downloads\\detdata-data-ss06pid.csv")
DT <- read.csv("C://Documents and Settings//Администратор//Мои документы//Downloads//detdata-data-ss06pid.csv")
f <- file.path(getwd(), "ss06pid.csv")
download.file(DTURL, f)
DT <- fread.csv("C://Documents and Settings//Администратор//Мои документы//Downloads//getdata-data-ss06hid.csv")
library(data.table)
install.packages('data.table')
library(data.table)
DT <- fread.csv("C://Documents and Settings//Администратор//Мои документы//Downloads//getdata-data-ss06hid.csv")
install.packages("swirl")
library("swirl")
?InstallCourses
install_course_github("LarionovaAnna", "R_Programming",
multi = FALSE)
install_from_swirl("R Programming")
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
x<-0
x
x<-1:10
for i>0:
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
url <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
data <- read.csv(url)
url <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
data <- read.csv(url)
install.packages("sqldf")
library(sqldf)
sqldf("select pwgtp1 from data where AGEP < 50")
p<-data$PWGTP
p
p<50
p1<-data$PWGTP1
sqldf("select pwgtp from data where AGEP < 50")
sqldf("select PWGTP from data where AGEP < 50")
sqldf("select PWGTP from data")
sqldf("select PWGTP from data where AGEP<50")
sqldf("select pwgtp1,agep from data where AGEP < 50")
sqldf("select pwgtp from data where AGEP < 50")
sqldf("select count(pwgtp) from data where AGEP < 50")
sqldf("select count(pwgtp) from data")
sqldf("select count(*),pwgtp,agep from data where AGEP < 50")
sqldf("select pwgtp,agep from data where AGEP < 50")
sqldf("select distinct AGEP from data")
url1 <- "http://biostat.jhsph.edu/~jleek/contact.html"
d1 = url1
htmlCode = readLines(d1)
close(d1)
htmlCode[10,]
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
url2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
d2 = url2
htmlCode = readLines(d2)
url2 <- "http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
htmlCode = readLines(d2)
install.packages("httr")
library(httr)
html2 = GET(url2)
content2 = content(html2, as = "text")
summ <- sum(content2[4],content2[9])
content2[4]
content2[4,]
content2[4]
read.fortran(url2)
read.fortran(file=url2)
read.fortran(file=d2)
read.fortran(file=d2,"123456", "987654")
read.fortran(file=d2,"123456")
getwd
getwd()
setwd("C://Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW//")
getwd()
paste(1,".csv")
filename="1"
filename
filename=filename+".csv"
filename=paste(filename,".csv")
filename=paste(filename,".csv","34567")
filename="1.csv"
getwd()
filename="/specdata/1.csv"
filename="/specdata/001.csv"
file <- read.csv(filename)
sub <- subset(file, !is.na(pollutant), select = pollutant)
file <- read.csv(filename)
filename="/specdata/001.csv"
file <- read.csv(filename, rw)
filename="./specdata/001.csv"
file <- read.csv(filename, rw)
file <- read.csv(filename)
pollutant="sulfate"
sub <- subset(file, !is.na(pollutant), select = pollutant)
sub
sum(sub)
sub <- subset(file, !is.na(sulfate), select = sulfate)
sub
sub <- subset(file, !is.na('sulfate'), select = 'sulfate')
sub
pollutantmean("specdata","nitrate",1:10)
source("pollutantmean.R")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata","nitrate",1:10)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",1:10)
pollutantmean("specdata","nitrate",1)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",1)
cat("./", 1)
cat("./",1)
filename=paste(c(1,2,".csv"),collapse=" ")
filename=paste(c(1,2,".csv"),collapse=' ')
filename=paste(c(1,2,".csv"),collapse='')
pollutantmean("specdata","nitrate",1)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",1)
source("pollutantmean.R")
pollutantmean("specdata","nitrate",1)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
filename="./specdata/001.csv"
file <- read.csv(filename)
names(file)
subpol <- file[!rowSums(is.na(file[names(file)])), ]
subpol
subpol <- nrow(file[!rowSums(is.na(file[names(file)])), ])
subpol
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1:2)
source("complete.R")
complete("specdata", 1:2)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1:10)
?cor
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
corr("specdata", 150)
file$sulfate
filename="./specdata/001.csv"
file <- read.csv(filename)
file <- file[!rowSums(is.na(file[names(file)])), ]
file$sulfate
source("corr.R")
source("complete.R")
corr("specdata", 150)
source("corr.R")
source("complete.R")
corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit
submit()
2
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
getwd()
setwd "C:\Documents and Settings\Администратор\datasciencecoursera\Getting and Cleaning Data\HW"
setwd "C:\\Documents and Settings\\Администратор\\datasciencecoursera\\Getting and Cleaning Data\\HW"
setwd "C:\Documents and Settings\\Администратор\\datasciencecoursera\\Getting and Cleaning Data\\HW"
setwd "C:\Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW"
setwd "C:\//Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW"
setwd "C://Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW"
setwd "C:\/Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW"
setwd "C:\Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW"
setwd "C://Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW"
setwd "C://Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW//"
?setwd
setwd ("C://Documents and Settings//Администратор//datasciencecoursera//Getting and Cleaning Data//HW")
getwd()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
